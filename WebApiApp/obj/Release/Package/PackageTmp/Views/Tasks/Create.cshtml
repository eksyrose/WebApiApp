@model WebApiApp.Tasks

@{

                ViewBag.Title = "Create";
}

<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
    Create new task
</button>

<!-- Modal -->
<div class="modal fade" id="Create" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Create</h4>
            </div>
            <div class="modal-body">
                
                @using (Ajax.BeginForm("Create", new AjaxOptions { }))
                {

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                            <input type="reset" value="Cancel" onclick='goBack()' class="btn btn-default" />
                        </div>
                    </div>
                    <br />
                    <div class="modal-footer">
                    </div>
                    <br />
                }
            </div>
        </div>
    </div>
</div>
    @Scripts.Render("~/scripts/jquery-1.10.2.min.js")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type='text/javascript'>
            function goBack() {
                window.history.back();
            }


        </script> 

           <script src="~/Scripts/jquery-1.10.2.min.js">
                $('#Create').submit(function () {
                    var jqxhr = $.post('tasks/create', $('#Create').serialize())
                        .success(function () {

                        })
                        .error(function () {
                            $('#message').html("Error posting the update.");
                        });
                    return false;
                });

            </script> 

    }
